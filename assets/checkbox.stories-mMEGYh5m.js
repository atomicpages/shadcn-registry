import{j as s}from"./jsx-runtime-BjG_zV1W.js";import{r}from"./index-CE0XXScK.js";import{u as T}from"./index-Dv1nZR32.js";import{c as q}from"./index-BErBjXyl.js";import{u as z,c as N,a as F,P as X}from"./index-Cvb_kt8_.js";import{u as $}from"./index-czwiQ4I0.js";import{P as L}from"./index-CtBI7pHQ.js";import{a as S}from"./utils-eOuC519h.js";import{c as G}from"./createLucideIcon-DhchgwkM.js";import{L as J}from"./label-C26wB_QJ.js";import"./_commonjsHelpers-Cpj98o6Y.js";import"./index-Cld1dQTW.js";import"./index-qVV5lYCa.js";/**
 * @license lucide-react v0.460.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const Q=G("Check",[["path",{d:"M20 6 9 17l-5-5",key:"1gmf2c"}]]);var j="Checkbox",[U,me]=q(j),[V,W]=U(j),A=r.forwardRef((e,n)=>{const{__scopeCheckbox:t,name:c,checked:l,defaultChecked:o,required:f,disabled:p,value:b="on",onCheckedChange:C,form:u,...y}=e,[i,k]=r.useState(null),v=T(n,a=>k(a)),g=r.useRef(!1),w=i?u||!!i.closest("form"):!0,[m=!1,E]=z({prop:l,defaultProp:o,onChange:C}),K=r.useRef(m);return r.useEffect(()=>{const a=i==null?void 0:i.form;if(a){const h=()=>E(K.current);return a.addEventListener("reset",h),()=>a.removeEventListener("reset",h)}},[i,E]),s.jsxs(V,{scope:t,state:m,disabled:p,children:[s.jsx(L.button,{type:"button",role:"checkbox","aria-checked":d(m)?"mixed":m,"aria-required":f,"data-state":B(m),"data-disabled":p?"":void 0,disabled:p,value:b,...y,ref:v,onKeyDown:N(e.onKeyDown,a=>{a.key==="Enter"&&a.preventDefault()}),onClick:N(e.onClick,a=>{E(h=>d(h)?!0:!h),w&&(g.current=a.isPropagationStopped(),g.current||a.stopPropagation())})}),w&&s.jsx(Y,{control:i,bubbles:!g.current,name:c,value:b,checked:m,required:f,disabled:p,form:u,style:{transform:"translateX(-100%)"},defaultChecked:d(o)?!1:o})]})});A.displayName=j;var M="CheckboxIndicator",O=r.forwardRef((e,n)=>{const{__scopeCheckbox:t,forceMount:c,...l}=e,o=W(M,t);return s.jsx(X,{present:c||d(o.state)||o.state===!0,children:s.jsx(L.span,{"data-state":B(o.state),"data-disabled":o.disabled?"":void 0,...l,ref:n,style:{pointerEvents:"none",...e.style}})})});O.displayName=M;var Y=e=>{const{control:n,checked:t,bubbles:c=!0,defaultChecked:l,...o}=e,f=r.useRef(null),p=$(t),b=F(n);r.useEffect(()=>{const u=f.current,y=window.HTMLInputElement.prototype,k=Object.getOwnPropertyDescriptor(y,"checked").set;if(p!==t&&k){const v=new Event("click",{bubbles:c});u.indeterminate=d(t),k.call(u,d(t)?!1:t),u.dispatchEvent(v)}},[p,t,c]);const C=r.useRef(d(t)?!1:t);return s.jsx("input",{type:"checkbox","aria-hidden":!0,defaultChecked:l??C.current,...o,tabIndex:-1,ref:f,style:{...e.style,...b,position:"absolute",pointerEvents:"none",opacity:0,margin:0}})};function d(e){return e==="indeterminate"}function B(e){return d(e)?"indeterminate":e?"checked":"unchecked"}var H=A,Z=O;const P=r.forwardRef(({className:e,...n},t)=>s.jsx(H,{ref:t,className:S("peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground",e),...n,children:s.jsx(Z,{className:S("flex items-center justify-center text-current"),children:s.jsx(Q,{className:"h-4 w-4"})})}));P.displayName=H.displayName;P.__docgenInfo={description:"",methods:[]};const R=r.forwardRef(({label:e,"aria-label":n,"aria-labelledby":t,...c},l)=>{const o=r.useId();return s.jsxs("div",{className:"flex items-center space-x-2",children:[s.jsx(P,{id:c.id??o,ref:l,"aria-label":n,"aria-labelledby":t,...c}),s.jsx(J,{htmlFor:c.id??o,className:"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70 cursor-pointer",children:e})]})});R.displayName="Checkbox";R.__docgenInfo={description:"",methods:[],displayName:"Checkbox"};const fe={title:"Components/Checkbox",component:R,tags:["autodocs"],argTypes:{disabled:{control:"boolean",description:"Disables the checkbox"},checked:{control:"select",options:[!0,!1,"indeterminate"],description:"Sets the checked state of the checkbox"}}},x={args:{label:"Accept terms and conditions"}};var I,_,D;x.parameters={...x.parameters,docs:{...(I=x.parameters)==null?void 0:I.docs,source:{originalSource:`{
  args: {
    label: "Accept terms and conditions"
  }
}`,...(D=(_=x.parameters)==null?void 0:_.docs)==null?void 0:D.source}}};const he=["SampleCheckbox"];export{x as SampleCheckbox,he as __namedExportsOrder,fe as default};
